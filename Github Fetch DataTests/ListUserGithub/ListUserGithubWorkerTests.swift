//
//  ListUserGithubWorkerTests.swift
//  Github Fetch Data
//
//  Created by daniel on 14/04/20.
//  Copyright (c) 2020 Daniel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Github_Fetch_Data
import XCTest

class ListUserGithubWorkerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: ListUserGithubWorker!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        setupListUserGithubWorker()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupListUserGithubWorker()
    {
        sut = ListUserGithubWorker()
        
    }
    
    // MARK: Test doubles
    class ListUserGithubWorkerSpy: ListUserGithubWorker
    {
        var fetchUserCalled = false
        
        override func fetchUsers(request: ListUserGithub.FetchUser.Request,completionHandler: @escaping ((_ users: [Users]) -> Void))
        {
            fetchUserCalled = true
            DispatchQueue.main.asyncAfter(deadline: DispatchTime.now() + 1) {
              completionHandler([])
            }

        }
    }
    
    // MARK: Tests
    
    func testSomething()
    {
        // Given
        
        // When
        
        // Then
    }
    
    func testFetchListUsersShouldReturnUsers() {
        // Given
        let request = ListUserGithub.FetchUser.Request()
        
        // WHEN
        let expect = expectation(description: "Wait for fetch data")
        
        sut.fetchUsers(request: request){ (users: [Users]) -> Void in
            expect.fulfill()
        }
        waitForExpectations(timeout: 10, handler: { (error)-> Void in
            XCTAssert(true, "Calling fetchUsers() should return value")
        })
    }
}
