//
//  ListUserGithubPresenterTests.swift
//  Github Fetch Data
//
//  Created by daniel on 14/04/20.
//  Copyright (c) 2020 Daniel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Github_Fetch_Data
import XCTest

class ListUserGithubPresenterTests: XCTestCase
{
  // MARK: Subject under test
  
  var sut: ListUserGithubPresenter!
  
  // MARK: Test lifecycle
  
  override func setUp()
  {
    super.setUp()
    setupListUserGithubPresenter()
  }
  
  override func tearDown()
  {
    super.tearDown()
  }
  
  // MARK: Test setup
  
  func setupListUserGithubPresenter()
  {
    sut = ListUserGithubPresenter()
  }
  
  // MARK: Test doubles
  
  class ListUserGithubDisplayLogicSpy: ListUserGithubDisplayLogic
  {
    var displaySomethingCalled = false
    var displayUserCalled = false
    
    var expectedViewModel: ListUserGithub.FetchUser.ViewModel?
    
    func displaySomething(viewModel: ListUserGithub.Something.ViewModel)
    {
      displaySomethingCalled = true
    }
    
    func displayUsers(viewModel: ListUserGithub.FetchUser.ViewModel) {
        displayUserCalled = true
        expectedViewModel = viewModel
    }
  }
  
  // MARK: Tests
  
  func testPresentSomething()
  {
    // Given
    let spy = ListUserGithubDisplayLogicSpy()
    sut.viewController = spy
    let response = ListUserGithub.Something.Response()
    
    // When
    sut.presentSomething(response: response)
    
    // Then
    XCTAssertTrue(spy.displaySomethingCalled, "presentSomething(response:) should ask the view controller to display the result")
  }
    
    func testPresentListUser()
    {
        //Given
        let spy = ListUserGithubDisplayLogicSpy()
        sut.viewController = spy
        
        //When
        let response = ListUserGithub.FetchUser.Response(users: [])
        
        sut.presentUsers(response: response)
        
        XCTAssert(spy.displayUserCalled, "presentListUser should called ")
    }
}
