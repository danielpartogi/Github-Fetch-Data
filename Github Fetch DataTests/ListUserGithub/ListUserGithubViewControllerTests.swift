//
//  ListUserGithubViewControllerTests.swift
//  Github Fetch Data
//
//  Created by daniel on 14/04/20.
//  Copyright (c) 2020 Daniel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import Github_Fetch_Data
import XCTest

class ListUserGithubViewControllerTests: XCTestCase
{
    // MARK: Subject under test
    
    var sut: ListUserGithubViewController!
    var window: UIWindow!
    
    // MARK: Test lifecycle
    
    override func setUp()
    {
        super.setUp()
        window = UIWindow()
        setupListUserGithubViewController()
    }
    
    override func tearDown()
    {
        window = nil
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupListUserGithubViewController()
    {
        let bundle = Bundle.main
        let storyboard = UIStoryboard(name: "Main", bundle: bundle)
        sut = storyboard.instantiateViewController(withIdentifier: "ListUserGithubViewController") as? ListUserGithubViewController
    }
    
    func loadView()
    {
        window.addSubview(sut.view)
        RunLoop.current.run(until: Date())
    }
    
    // MARK: Test doubles
    
    class ListUserGithubBusinessLogicSpy: ListUserGithubBusinessLogic
    {
        
        
        var doSomethingCalled = false
        var fetchUsersCalled = false
        
        func doSomething(request: ListUserGithub.Something.Request)
        {
            doSomethingCalled = true
        }
        
        func fetchUser(request: ListUserGithub.FetchUser.Request) {
            fetchUsersCalled = true
        }
    }
    
    // MARK: Tests
    
    func testShouldDoSomethingWhenViewIsLoaded()
    {
        // Given
        let spy = ListUserGithubBusinessLogicSpy()
        sut.interactor = spy
        
        // When
        loadView()
        
        // Then
        XCTAssertTrue(spy.doSomethingCalled, "viewDidLoad() should ask the interactor to do something")
    }
    
    func testDisplaySomething()
    {
        // Given
        let viewModel = ListUserGithub.Something.ViewModel()
        
        // When
        loadView()
        sut.displaySomething(viewModel: viewModel)
        
        // Then
        //XCTAssertEqual(sut.nameTextField.text, "", "displaySomething(viewModel:) should update the name text field")
    }
    
    func testFetchUserShouldCalledWhenViewIsLoaded()
    {
        // Given
        let spy = ListUserGithubBusinessLogicSpy()
        sut?.interactor = spy
        
        // When
        loadView()
        
        // Then
        XCTAssertTrue(spy.fetchUsersCalled, "viewDidLoad() should ask the interactor to fetch user")
    }
}
