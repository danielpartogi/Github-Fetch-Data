//
//  ListUserGithubViewController.swift
//  Github Fetch Data
//
//  Created by daniel on 14/04/20.
//  Copyright (c) 2020 Daniel. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListUserGithubDisplayLogic: class
{
    func displaySomething(viewModel: ListUserGithub.Something.ViewModel)
    func displayUsers(viewModel: ListUserGithub.FetchUser.ViewModel)
}

class ListUserGithubViewController: UITableViewController, ListUserGithubDisplayLogic
{
    
    var interactor: ListUserGithubBusinessLogic?
    var router: (NSObjectProtocol & ListUserGithubRoutingLogic & ListUserGithubDataPassing)?
    var data: [Users]?
    
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = ListUserGithubInteractor()
        let presenter = ListUserGithubPresenter()
        let router = ListUserGithubRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        fetchUser()
        let nib = UINib(nibName: "ListUserTableViewCell", bundle: nil)
        tableView.register(nib, forCellReuseIdentifier: "listUser")
    }
    
    
    // MARK: Fetch User
    
    func fetchUser(){
        let request = ListUserGithub.FetchUser.Request()
        interactor?.fetchUser(request: request)
    }
    
    func displaySomething(viewModel: ListUserGithub.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
    
    // MARK: display users
    
    func displayUsers(viewModel: ListUserGithub.FetchUser.ViewModel) {
        
        data = viewModel.displayUsers
        self.tableView.reloadData()
    }
    
    // MARK: Showing data
    
    override func numberOfSections(in tableView: UITableView) -> Int
    {
      return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
      return data?.count ?? 0
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let rowNumber = indexPath.row
        let cellIdentifier = "listUser"
        let cell = tableView.dequeueReusableCell(withIdentifier: cellIdentifier, for: indexPath) as! ListUserTableViewCell
        
        guard let selectedData = data?[rowNumber] else { return cell}
        
        cell.label.text = selectedData.login
        
        return cell
        
    }
    
}
